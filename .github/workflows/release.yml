name: release

on:
  push:
    tags:
      - 'v*.*'

jobs:
  e2e:
    # Ensure E2E runs serialize with other E2E workflows
    concurrency:
      group: konnect-e2e
      cancel-in-progress: false
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Install clipboard build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: go.mod
      - name: Build
        run: make build
      - name: Run E2E tests (Konnect)
        env:
          KONGCTL_E2E_KONNECT_PAT: ${{ secrets.KONGCTL_E2E_KONNECT_PAT }}
          KONGCTL_E2E_KONNECT_BASE_URL: ${{ secrets.KONGCTL_E2E_KONNECT_BASE_URL }}
          KONGCTL_E2E_RESET: "1"
          KONGCTL_E2E_LOG_LEVEL: "info"
          KONGCTL_E2E_ARTIFACTS_DIR: ${{ runner.temp }}/kongctl-e2e-${{ github.run_id }}
        run: |
          make test-e2e
      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: e2e-artifacts-${{ github.run_id }}
          path: ${{ runner.temp }}/kongctl-e2e-${{ github.run_id }}

  goreleaser:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - run: git config --global url."https://${GITHUB_TOKEN}@github.com/".insteadOf https://github.com/
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PRIVATE_READ }}
      - name: Run GoReleaser (goreleaser-cross)
        run: |
          HOST_UID="$(id -u)"
          HOST_GID="$(id -g)"
          docker run --rm \
            -v "${PWD}:/work" \
            -w /work \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e TAP_GITHUB_TOKEN=${{ secrets.TAP_GITHUB_TOKEN }} \
            -e CGO_ENABLED=1 \
            -e DEBIAN_FRONTEND=noninteractive \
            -e HOST_UID="${HOST_UID}" \
            -e HOST_GID="${HOST_GID}" \
            --entrypoint /bin/sh \
            goreleaser/goreleaser-cross:v1.25.3 \
            -c "set -e; apt-get update; apt-get install -y --no-install-recommends libx11-dev; git config --global --add safe.directory /work; goreleaser release --clean; if [ -d /work/dist ]; then chown -R \${HOST_UID:-0}:\${HOST_GID:-0} /work/dist; fi"
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Fetch Homebrew tap
        env:
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
        run: |
          rm -rf dist/homebrew-tap
          mkdir -p dist/homebrew-tap
          git clone --depth 1 "https://x-access-token:${TAP_GITHUB_TOKEN}@github.com/kong/homebrew-kongctl.git" dist/homebrew-tap/homebrew-kongctl
      - name: Sync generated Homebrew files
        run: |
          mkdir -p dist/homebrew-tap/homebrew-kongctl/Casks
          rm -f dist/homebrew-tap/homebrew-kongctl/kongctl.rb
          if [[ -f dist/homebrew/Casks/kongctl.rb ]]; then
            cp dist/homebrew/Casks/kongctl.rb dist/homebrew-tap/homebrew-kongctl/Casks/kongctl.rb
          fi
      - name: Fix Homebrew tap style
        run: ./scripts/fix-homebrew-tap.sh dist/homebrew-tap/homebrew-kongctl
      - name: Commit and push Homebrew tap updates
        working-directory: dist/homebrew-tap/homebrew-kongctl
        env:
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
        run: |
          git config user.name "kongctl Release Bot"
          git config user.email "kongctl@konghq.com"
          git remote set-url origin "https://x-access-token:${TAP_GITHUB_TOKEN}@github.com/kong/homebrew-kongctl.git"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "chore: normalize tap files"
            git push origin HEAD:main
          else
            echo "No tap changes to commit"
          fi
      - name: Upload assets
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist
          path: dist/*
