# Protected Production Resources
# This example demonstrates resource protection for critical production APIs

_defaults:
  kongctl:
    protected: true            # All resources protected by default

# Protected resources cannot be modified or deleted without explicitly
# setting protected: false first. This prevents accidental changes.

apis:
  - ref: customer-api
    name: "Customer API"
    description: "Production API for customer data and operations"
    labels:
      environment: production
      tier: critical
      sla: 99.99
    # Inherits protected: true from defaults
    
    versions:
      - ref: customer-v4
        version: "4.0.0"
        spec:
          document: |
            openapi: 3.0.0
            info:
              title: Customer API
              version: 4.0.0
            servers:
              - url: https://api.example.com/v4
            paths:
              /customers:
                get:
                  summary: List customers
              /customers/{id}:
                get:
                  summary: Get customer details
    
    implementations:
      - ref: customer-prod-impl
        implementation_url: "https://prod.internal.example.com/customer"
        service:
          id: "prod-customer-service-id"
          control_plane_id: production-cp

  - ref: order-api
    name: "Order Management API"
    description: "Production API for order processing"
    labels:
      environment: production
      tier: critical
      sla: 99.99
    # Inherits protected: true from defaults
    
    versions:
      - ref: order-v2
        version: "2.0.0"
        spec:
          document: |
            openapi: 3.0.0
            info:
              title: Order API
              version: 2.0.0

  - ref: test-api
    name: "Test API"
    description: "Non-critical test API that can be modified"
    labels:
      environment: production
      purpose: testing
    kongctl:
      protected: false          # Override: Not protected - can be modified
    
    versions:
      - ref: test-v1
        version: "1.0.0"
        spec:
          document: |
            openapi: 3.0.0
            info:
              title: Test API
              version: 1.0.0

portals:
  - ref: prod-portal
    name: "Production API Portal"
    is_public: true
    custom_domain: "api.example.com"
    labels:
      environment: production
      tier: critical
    # Inherits protected: true from defaults
    
    customization:
      ref: prod-theme
      welcome_message: "Welcome to Our API Platform"
      theme:
        mode: light
        colors:
          primary: "#1A365D"

application_auth_strategies:
  - ref: prod-oauth
    name: "Production OAuth"
    display_name: "OAuth 2.0"
    description: "Production OAuth 2.0 authentication"
    strategy_type: openid_connect
    configs:
      openid_connect:
        issuer: "https://auth.example.com"
        client_id: "prod-client-id"
        client_secret: "prod-client-secret"
        scopes:
          - "openid"
          - "profile"
          - "read"
          - "write"
    labels:
      environment: production
    # Inherits protected: true from defaults

# Best Practices Demonstrated:
# 1. Protect all production resources by default using _defaults
# 2. Use labels for additional metadata (tier, SLA, environment)
# 3. Override protection only for specific non-critical resources
# 4. Always document why a resource is not protected
# 5. Consider combining with namespaces for team isolation